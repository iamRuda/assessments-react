import React, { useEffect, useState } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faBell, faCog } from "@fortawesome/free-solid-svg-icons";

const Dashboard = () => {
  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  const tests = [
    { id: 1, title: "Math Test", description: "Algebra and Geometry" },
    { id: 2, title: "Science Test", description: "Physics and Chemistry" },
    { id: 3, title: "History Test", description: "World War II" },
    { id: 4, title: "English Test", description: "Grammar and Vocabulary" },
    { id: 5, title: "Geography Test", description: "Maps and Climates" },
    { id: 6, title: "Biology Test", description: "Cell Biology" },
  ];

  const [data, setData] = useState(null);
  const [username, setUsername] = useState("");

  useEffect(() => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
    const savedUsername = localStorage.getItem("username");
    setUsername(savedUsername);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (savedUsername === "test") {
      setData({ tests });
    } else {
      const fetchProtectedData = async () => {
        const token = localStorage.getItem("token");

        try {
          const response = await fetch("http://localhost:8080/api/protected", {
            method: "GET",
            headers: {
              Authorization: `Bearer ${token}`,
            },
          });
          const result = await response.json();
          setData(result);
        } catch (error) {
          console.error("Error fetching protected data", error);
        }
      };

      fetchProtectedData();
    }
  }, []);

  return (
    <div className="container">
      {/* Header —Å –ø—Ä–æ—Ñ–∏–ª–µ–º */}
      <header className="d-flex align-items-center justify-content-between my-4">
        <div className="d-flex align-items-center">
          <img
            src="https://via.placeholder.com/100" // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            alt="Profile"
            className="rounded-circle me-3"
            width="100"
            height="100"
          />
          <div>
            <h2>{username ? username : "Guest"}</h2> {/* –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
            <p>Student | Grade 10</p> {/* –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è */}
          </div>
        </div>

        {/* –ò–∫–æ–Ω–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
        <div className="d-flex align-items-center">
          <button className="btn btn-link" title="Notifications">
            <FontAwesomeIcon icon={faBell} size="lg" />
          </button>
          <button className="btn btn-link" title="Settings">
            <FontAwesomeIcon icon={faCog} size="lg" />
          </button>
        </div>
      </header>

      {/* –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã */}
      {data ? (
        <div className="row">
          {/* –ú–∞–ø–ø–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –≤—ã–≤–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏ */}
          {data.tests.map((test) => (
            <div key={test.id} className="col-md-4 mb-4">
              <div className="card h-100">
                <div className="card-body">
                  <h5 className="card-title">üìö {test.title}</h5>
                  <p className="card-text">{test.description}</p>
                  <a href="#" className="btn btn-primary">
                    Start Test
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <p>Loading...</p>
      )}
    </div>
  );
};

export default Dashboard;
